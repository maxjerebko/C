#include <iostream>   // Підключення бібліотеки для введення/виведення
#include <ctime>      // Для отримання поточного часу
#include <cstdlib>    // Для використання функції rand()
using namespace std;  // Щоб не писати std:: перед cout тощо

int main() {
    srand((int)time(0));  // Ініціалізація генератора випадкових чисел на основі поточного часу

    int size = 10;  // Розмірність квадратного масиву

    int array[size][size];  // Оголошення двовимірного масиву 10x10
    int* pointer = &array[0][0];  // Вказівник на перший елемент масиву

    // Заповнення масиву випадковими числами від 0 до 99
    for (int i = 0; i < size * size; i++) {
        *(pointer + i) = rand() % 100;  // Запис випадкового числа у відповідну позицію
    }

    cout << "Array:\n";  // Виведення заголовку
    for (int i = 0; i < size * size; ++i) {
        cout << *(pointer + i) << "\t";  // Виведення значення масиву з табуляцією
        if ((i + 1) % size == 0) cout << endl;  // Перехід на новий рядок після кожного 10-го елемента
    }

    cout << "\nMain diagonal: ";  // Виведення заголовку для головної діагоналі
    for (int i = 0; i < size; ++i) {
        cout << *(pointer + i * size + i) << " ";  // Виведення елементів головної діагоналі
    }

    cout << "\nSide diagonal: ";  // Виведення заголовку для побічної діагоналі
    for (int i = 0; i < size; ++i) {
        cout << *(pointer + i * size + (size - 1 - i)) << " ";  // Виведення елементів побічної діагоналі
    }

    int evenCount = 0, oddCount = 0;  // Лічильники парних і непарних чисел
    for (int i = 0; i < size * size; ++i) {
        if (*(pointer + i) % 2 == 0) {
            ++evenCount;  // Збільшуємо лічильник парних чисел
        } else {
            ++oddCount;   // Збільшуємо лічильник непарних чисел
        }
    }

    // Виведення результатів підрахунку
    cout << "\nQuantity of even values: " << evenCount << endl;  // Виведення кількості парних чисел
    cout << "Quantity of odd values: " << oddCount << endl;      // Виведення кількості непарних чисел

    return 0;  // Завершення програми
}
